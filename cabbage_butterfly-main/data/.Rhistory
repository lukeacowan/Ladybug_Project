print "hello world"
"hello world"
install.packages("tidyverse")
library(readxl)
rm(list = ls())
setwd("C:/Users/Eirik/Desktop/r project1")
df_case1<- read_excel("NP_EX_1-2.xlsx", skip = 3, .name_repair = "universal", sheet = "Sheet1")
library(dplyr)
library(dplyr)
set.seed(1983)
df <- data_frame(origins = sample(c('Portugal', 'Romania', 'Nigeria', 'Peru'),
size = 100, replace = TRUE),
destinations = sample(c('Texas', 'New Jersey', 'Colorado', 'Minnesota'),
size = 100, replace = TRUE))
df <- data_frame(origins = sample(c('Portugal', 'Romania', 'Nigeria', 'Peru'),
size = 100, replace = TRUE),
destinations = sample(c('Texas', 'New Jersey', 'Colorado', 'Minnesota'),
size = 100, replace = TRUE))
head(df)
df2 <- df %>%
group_by(origins, destinations) %>%
summarize(counts = n()) %>%
ungroup() %>%
arrange(desc(counts))
df2
install.packages(networkD3)
install.packages("networkD3")
library(networkD3)
name_vec <- c(unique(df2$origins), unique(df2$destinations))
nodes <- data.frame(name = name_vec, id = 0:7)
links <- df2 %>%
left_join(nodes, by = c('origins' = 'name')) %>%
rename(origin_id = id) %>%
left_join(nodes, by = c('destinations' = 'name')) %>%
rename(dest_id = id)
forceNetwork(Links = links, Nodes = nodes, Source = 'origin_id', Target = 'dest_id',
Value = 'counts', NodeID = 'name', Group = 'id', zoom = TRUE)
sankeyNetwork(Links = links, Nodes = nodes, Source = 'origin_id', Target = 'dest_id',
Value = 'counts', NodeID = 'name', fontSize = 16)
library(parsetR) # devtools::install_github("timelyportfolio/parsetR")
install.packages("parsetR")
install.packages("rnaturalearth")
library(rnaturalearth) # devtools::install_github('ropenscilabs/rnaturalearth')
countries <- ne_countries()
states <- ne_states(iso_a2 = 'US')
install.packages("rnaturalearthhires", repos = "http://packages.ropensci.org", type = "source")
library(rnaturalearth)
countries <- ne_countries()
states <- ne_states(iso_a2 = 'US')
install.packages("rgal")
install.packages("rgdal")
library(rgdal)
countries$longitude <- coordinates(countries)[,1]
countries$latitude <- coordinates(countries)[,2]
countries_xy <- countries@data %>%
select(admin, longitude, latitude)
states_xy <- states@data %>%
select(name, longitude, latitude)
devtools::install_github("ropenscilabs/rnaturalearthdata")
install.packages("rnaturalearthhires",
repos = "http://packages.ropensci.org",
type = "source")
install.packages("parsetR")
devtools::install_github("timelyportfolio/parsetR")
devtools::install_github("timelyportfolio/parsetR")
install.packages("devtools")
devtools::install_github("timelyportfolio/parsetR")
library(parsetR)
library(parsetR)
set.seed(1983)
df <- data_frame(origins = sample(c('Portugal', 'Romania', 'Nigeria', 'Peru'),
size = 100, replace = TRUE),
destinations = sample(c('Texas', 'New Jersey', 'Colorado', 'Minnesota'),
size = 100, replace = TRUE))
head(df)
df2 <- df %>%
group_by(origins, destinations) %>%
summarize(counts = n()) %>%
ungroup() %>%
arrange(desc(counts))
df2
name_vec <- c(unique(df2$origins), unique(df2$destinations))
nodes <- data.frame(name = name_vec, id = 0:7)
links <- df2 %>%
left_join(nodes, by = c('origins' = 'name')) %>%
rename(origin_id = id) %>%
left_join(nodes, by = c('destinations' = 'name')) %>%
rename(dest_id = id)
forceNetwork(Links = links, Nodes = nodes, Source = 'origin_id', Target = 'dest_id',
Value = 'counts', NodeID = 'name', Group = 'id', zoom = TRUE)
sankeyNetwork(Links = links, Nodes = nodes, Source = 'origin_id', Target = 'dest_id',
Value = 'counts', NodeID = 'name', fontSize = 16)
countries <- ne_countries()
states <- ne_states(iso_a2 = 'US')
countries$longitude <- coordinates(countries)[,1]
countries$latitude <- coordinates(countries)[,2]
countries_xy <- countries@data %>%
select(admin, longitude, latitude)
states_xy <- states@data %>%
select(name, longitude, latitude)
parset(df2, dimensions = c('origins', 'destinations'),
value = htmlwidgets::JS("function(d){return d.counts}"),
tension = 0.5)
countries <- ne_countries()
states <- ne_states(iso_a2 = 'US')
countries$longitude <- coordinates(countries)[,1]
countries$latitude <- coordinates(countries)[,2]
countries_xy <- countries@data %>%
select(admin, longitude, latitude)
states_xy <- states@data %>%
select(name, longitude, latitude)
library(readxl)
library(tidyverse)
library(dplyr)
library(lubridate)
library(ggplot2)
library(leaflet)
rm(list = ls())
library(readxl)
library(tidyverse)
library(dplyr)
library(lubridate)
library(ggplot2)
library(leaflet)
rm(list = ls())
library(readxl)
library(tidyverse)
library(dplyr)
library(lubridate)
library(ggplot2)
library(leaflet)
rm(list = ls())
library(readxl)
library(tidyverse)
library(dplyr)
library(lubridate)
library(ggplot2)
library(leaflet)
rm(list = ls())
setwd("C:/Users/Eirik/OneDrive/College/Senior/Data 331/Github/final_project/cabbage_butterfly-main/data")
complete_df <- read_excel('CompletePierisData_2022-03-09.xlsx', .name_repair = 'universal')
cleaned_df <- read_excel('Cleaned Data LWA .xlsx', .name_repair = 'universal')
#select necessary columns from complete_df to add to cleaned_df
new_cols <- complete_df %>%
select(coreid, dwc.decimalLatitude, dwc.decimalLongitude, LAnteriorSpotM3,
RAnteriorSpotM3, dwc.country, dwc.year) %>%
dplyr::rename(core.ID = coreid)
#join the columns to cleaned_df
cleaned_df <- cleaned_df %>%
dplyr::left_join(new_cols, by= c('core.ID')) %>%
na.omit(cleaned_df)
cleaned_df$LAnteriorSpotM3 <- as.numeric(cleaned_df$LAnteriorSpotM3)
#two sample t-test on the left wing length vs right wing length
t.test(cleaned_df$LW.length, cleaned_df$RW.length)
#make box plots to show distribution of wing size - t-test shows no significant difference between
# wings so only plot left wing
wing_length <- ggplot(cleaned_df, aes(sex, LW.length))
wing_length + geom_boxplot()
#overall statistics for wing length and width
avg_wing_length <- mean(c(cleaned_df$LW.length, cleaned_df$RW.length))
avg_wing_width <- mean(c(cleaned_df$LW.width, cleaned_df$RW.width))
median_length <- median(c(cleaned_df$LW.length, cleaned_df$RW.length))
median_width <- median(c(cleaned_df$LW.width, cleaned_df$RW.width))
min_length <- min(c(cleaned_df$LW.length, cleaned_df$RW.length))
min_width <- min(c(cleaned_df$LW.width, cleaned_df$RW.width))
max_length <- max(c(cleaned_df$LW.length, cleaned_df$RW.length))
max_width <- max(c(cleaned_df$LW.width, cleaned_df$RW.width))
#pivot table to compare male and female
comparison <- cleaned_df %>%
select(sex, LW.length, LW.apex.A, LAnteriorSpotM3) %>%
group_by(sex) %>%
summarise(mean_wing_length = mean(LW.length),
mean_apex = mean(LW.apex.A),
mean_spot = mean(LAnteriorSpotM3),
max_wing_length = max(LW.length),
max_apex = max(LW.apex.A),
max_spot = max(LAnteriorSpotM3))
#comparison to show how location affects size
location <- cleaned_df %>%
select(dwc.country, LW.length, LW.apex.A, LAnteriorSpotM3) %>%
group_by(dwc.country) %>%
summarise(mean_wing_length = mean(LW.length),
mean_apex = mean(LW.apex.A),
mean_spot = mean(LAnteriorSpotM3),
max_wing_length = max(LW.length),
max_apex = max(LW.apex.A),
max_spot = max(LAnteriorSpotM3))
#box plot to show how location affects size
size_country <- ggplot(cleaned_df, aes(dwc.country, LW.length))
size_country + geom_boxplot()
#average size by year
avg_size_year <- cleaned_df %>%
group_by(dwc.year) %>%
summarise(avg_wing_size = mean(LW.length),
avg_spot = mean(LAnteriorSpotM3),
avg_apex = mean(LW.apex.A))
barplot(avg_size_year$avg_wing_size,
names.arg = avg_size_year$dwc.year,
ylim = c(0,30))
#average size by decade
avg_size_decade <- cleaned_df %>%
mutate(decade = as.numeric(dwc.year) - as.numeric(dwc.year) %% 10) %>%
group_by(decade) %>%
summarise(avg_wing_size = mean(LW.length),
avg_spot = mean(LAnteriorSpotM3),
avg_apex = mean(LW.apex.A))
ggplot(avg_size_decade, aes(decade,avg_wing_size)) +
geom_bar(stat="identity", position = "dodge") +
labs(title="Average wing size by decade")
qpal <- colorQuantile('reds', cleaned_df$LW.length)
pal <- colorBin('rainbow(4)', cleaned_df$LW.length, pretty = FALSE, bins = 4)
pal
m <- leaflet() %>%
addTiles() %>%
#addCircleMarkers(lng=cleaned_df$dwc.decimalLongitude, lat=cleaned_df$dwc.decimalLatitude)
addCircleMarkers(
data = cleaned_df,
lng=cleaned_df$dwc.decimalLongitude, lat=cleaned_df$dwc.decimalLatitude,
color = ~pal(cleaned_df$LW.length))
m  # Print the map
m <- leaflet() %>%
addTiles() %>%
#addCircleMarkers(lng=cleaned_df$dwc.decimalLongitude, lat=cleaned_df$dwc.decimalLatitude)
addCircleMarkers(
data = cleaned_df,
lng=dwc.decimalLongitude, lat=dwc.decimalLatitude,
color = ~pal(LW.length))
m <- leaflet() %>%
addTiles() %>%
#addCircleMarkers(lng=cleaned_df$dwc.decimalLongitude, lat=cleaned_df$dwc.decimalLatitude)
addCircles(
data = cleaned_df,
lng=dwc.decimalLongitude, lat=dwc.decimalLatitude,
color = ~pal(LW.length))
m <- leaflet() %>%
addTiles() %>%
#addCircleMarkers(lng=cleaned_df$dwc.decimalLongitude, lat=cleaned_df$dwc.decimalLatitude)
addCircles(
data = cleaned_df,
lng=cleaned_df$dwc.decimalLongitude, lat=cleaned_df$dwc.decimalLatitude,
color = ~pal(cleaned_df$LW.length))
m  # Print the map
m <- leaflet() %>%
addTiles() %>%
#addCircleMarkers(lng=cleaned_df$dwc.decimalLongitude, lat=cleaned_df$dwc.decimalLatitude)
addCircleMarkers(
data = cleaned_df,
lng=cleaned_df$dwc.decimalLongitude, lat=cleaned_df$dwc.decimalLatitude,
color = ~pal(cleaned_df$LW.length))
m  # Print the map
m <- leaflet() %>%
addTiles() %>%
#addCircleMarkers(lng=cleaned_df$dwc.decimalLongitude, lat=cleaned_df$dwc.decimalLatitude)
addCircleMarkers(
lng=cleaned_df$dwc.decimalLongitude, lat=cleaned_df$dwc.decimalLatitude,
color = ~pal(cleaned_df$LW.length))
pal
m <- leaflet() %>%
addTiles() %>%
#addCircleMarkers(lng=cleaned_df$dwc.decimalLongitude, lat=cleaned_df$dwc.decimalLatitude)
addCircleMarkers(
lng=cleaned_df$dwc.decimalLongitude, lat=cleaned_df$dwc.decimalLatitude,
color = ~qpal(cleaned_df$LW.length))
qpal
qpal <- colorQuantile('reds', data = cleaned_df, domain = LW.length)
qpal <- colorQuantile('reds', domain = cleaned_df$LW.length)
qpal
qpal <- colorQuantile('reds', cleaned_df$LW.length)
qpal
qpal <- colorQuantile('reds', cleaned_df$LW.length,n= 4, probs = seq(0,100,length.out = n+1))
qpal <- colorQuantile('reds', cleaned_df$LW.length,n= 4, probs = seq(0,100,length.out = 5))
qpal
qpal <- colorQuantile('reds', cleaned_df$LW.length,n= 4, probs = seq(0,100,length.out = 5))
qpal <- colorQuantile('reds', cleaned_df$LW.length)
qpal
q <- quantile(cleaned_df$LW.length, probs = seq(0,1,0.25))
qpal <- colorQuantile('reds', q)
qpal
qpal <- colorQuantile('reds', cleaned_df$LW.length)
qpal
m <- leaflet() %>%
addTiles() %>%
#addCircleMarkers(lng=cleaned_df$dwc.decimalLongitude, lat=cleaned_df$dwc.decimalLatitude)
addCircleMarkers(
lng=cleaned_df$dwc.decimalLongitude, lat=cleaned_df$dwc.decimalLatitude,
color = ~qpal(cleaned_df$LW.length))
m  # Print the map
m <- leaflet() %>%
addTiles() %>%
#addCircleMarkers(lng=cleaned_df$dwc.decimalLongitude, lat=cleaned_df$dwc.decimalLatitude)
addCircleMarkers(
lng=cleaned_df$dwc.decimalLongitude, lat=cleaned_df$dwc.decimalLatitude,
color = 'red')
m  # Print the map
m <- leaflet() %>%
addTiles() %>%
#addCircleMarkers(lng=cleaned_df$dwc.decimalLongitude, lat=cleaned_df$dwc.decimalLatitude)
addCircleMarkers(
lng=cleaned_df$dwc.decimalLongitude, lat=cleaned_df$dwc.decimalLatitude,
color = 'green')
m  # Print the map
m <- leaflet() %>%
addTiles() %>%
#addCircleMarkers(lng=cleaned_df$dwc.decimalLongitude, lat=cleaned_df$dwc.decimalLatitude)
addCircleMarkers(
lng=cleaned_df$dwc.decimalLongitude, lat=cleaned_df$dwc.decimalLatitude,
color = 'green', radius = 50)
m  # Print the map
m <- leaflet() %>%
addTiles() %>%
#addCircleMarkers(lng=cleaned_df$dwc.decimalLongitude, lat=cleaned_df$dwc.decimalLatitude)
addCircleMarkers(
lng=cleaned_df$dwc.decimalLongitude, lat=cleaned_df$dwc.decimalLatitude,
color = 'green', radius = 1)
m  # Print the map
#geospatial map of findings
m <- leaflet() %>%
addTiles() %>%
addCircleMarkers(
lng=cleaned_df$dwc.decimalLongitude, lat=cleaned_df$dwc.decimalLatitude,
color = 'green', radius = 1)
m  # Print the map
#geospatial map of findings
m <- leaflet() %>%
addTiles() %>%
addCircleMarkers(
lng=cleaned_df$dwc.decimalLongitude, lat=cleaned_df$dwc.decimalLatitude,
color = 'green', radius = 5)
m  # Print the map
colnames(cleaned_df)[which(names(cleaned_df) == "dwc.decimalLongitude")] <- "longitude"
View(cleaned_df)
colnames(cleaned_df)[which(names(cleaned_df) == "dwc.decimalLatitude")] <- "latitude"
colnames(cleaned_df)[which(names(cleaned_df) == 'dwc.country')] <- "country"
colnames(cleaned_df)[which(names(cleaned_df) == 'dwc.year')] <- "year"
#two sample t-test on the left wing length vs right wing length
t.test(cleaned_df$LW.length, cleaned_df$RW.length)
# p-value of .9447 shows that there is no significant difference between right and left wing length
#make box plots to show distribution of wing size - t-test shows no significant difference between
# wings so only plot left wing
wing_length <- ggplot(cleaned_df, aes(sex, LW.length))
wing_length + geom_boxplot()
#overall statistics for wing length and width
avg_wing_length <- mean(c(cleaned_df$LW.length, cleaned_df$RW.length))
avg_wing_width <- mean(c(cleaned_df$LW.width, cleaned_df$RW.width))
median_length <- median(c(cleaned_df$LW.length, cleaned_df$RW.length))
median_width <- median(c(cleaned_df$LW.width, cleaned_df$RW.width))
min_length <- min(c(cleaned_df$LW.length, cleaned_df$RW.length))
min_width <- min(c(cleaned_df$LW.width, cleaned_df$RW.width))
max_length <- max(c(cleaned_df$LW.length, cleaned_df$RW.length))
max_width <- max(c(cleaned_df$LW.width, cleaned_df$RW.width))
#pivot table to compare male and female
comparison <- cleaned_df %>%
select(sex, LW.length, LW.apex.A, LAnteriorSpotM3) %>%
group_by(sex) %>%
summarise(mean_wing_length = mean(LW.length),
mean_apex = mean(LW.apex.A),
mean_spot = mean(LAnteriorSpotM3),
max_wing_length = max(LW.length),
max_apex = max(LW.apex.A),
max_spot = max(LAnteriorSpotM3))
#comparison to show how location affects size
location <- cleaned_df %>%
select(dwc.country, LW.length, LW.apex.A, LAnteriorSpotM3) %>%
group_by(dwc.country) %>%
summarise(mean_wing_length = mean(LW.length),
mean_apex = mean(LW.apex.A),
mean_spot = mean(LAnteriorSpotM3),
max_wing_length = max(LW.length),
max_apex = max(LW.apex.A),
max_spot = max(LAnteriorSpotM3))
#comparison to show how location affects size
location <- cleaned_df %>%
select(country, LW.length, LW.apex.A, LAnteriorSpotM3) %>%
group_by(country) %>%
summarise(mean_wing_length = mean(LW.length),
mean_apex = mean(LW.apex.A),
mean_spot = mean(LAnteriorSpotM3),
max_wing_length = max(LW.length),
max_apex = max(LW.apex.A),
max_spot = max(LAnteriorSpotM3))
#box plot to show how location affects size
size_country <- ggplot(cleaned_df, aes(country, LW.length))
size_country + geom_boxplot()
#average size by year
avg_size_year <- cleaned_df %>%
group_by(year) %>%
summarise(avg_wing_size = mean(LW.length),
avg_spot = mean(LAnteriorSpotM3),
avg_apex = mean(LW.apex.A))
barplot(avg_size_year$avg_wing_size,
names.arg = avg_size_year$year,
ylim = c(0,30))
#average size by decade
avg_size_decade <- cleaned_df %>%
mutate(decade = as.numeric(year) - as.numeric(year) %% 10) %>%
group_by(decade) %>%
summarise(avg_wing_size = mean(LW.length),
avg_spot = mean(LAnteriorSpotM3),
avg_apex = mean(LW.apex.A))
ggplot(avg_size_decade, aes(decade,avg_wing_size)) +
geom_bar(stat="identity", position = "dodge") +
labs(title="Average wing size by decade")
#geospatial map of findings
m <- leaflet() %>%
addTiles() %>%
addCircleMarkers(
lng=cleaned_df$longitude, lat=cleaned_df$latitude,
color = 'green', radius = 5)
m  # Print the map
ggplot(avg_size_decade, aes(decade,avg_wing_size)) +
geom_bar(stat="identity", position = "dodge") +
labs(title="Average wing size by decade") +
ylab('wing length')
barplot(avg_size_year$avg_wing_size,
names.arg = avg_size_year$year,
ylim = c(0,30),
ylab('wing size'),
xlab('year'),
labs(title = 'Wing Size by Year'))
avg_size_year <- cleaned_df %>%
group_by(year) %>%
summarise(avg_wing_size = mean(LW.length),
avg_spot = mean(LAnteriorSpotM3),
avg_apex = mean(LW.apex.A))
avg_size_year <- cleaned_df %>%
group_by(year) %>%
summarise(avg_wing_size = mean(LW.length),
avg_spot = mean(LAnteriorSpotM3),
avg_apex = mean(LW.apex.A))
barplot(avg_size_year$avg_wing_size,
names.arg = avg_size_year$year,
ylim = c(0,30),
ylab('wing size'),
xlab('year'),
labs(title = 'Wing Size by Year'))
avg_size_year <- cleaned_df %>%
group_by(year) %>%
summarise(avg_wing_size = mean(LW.length),
avg_spot = mean(LAnteriorSpotM3),
avg_apex = mean(LW.apex.A))
barplot(avg_size_year$avg_wing_size,
names.arg = avg_size_year$year,
ylim = c(0,30)) +
ylab('wing size') +
xlab('year') +
labs(title = 'Wing Size by Year')
avg_size_year <- cleaned_df %>%
group_by(year) %>%
summarise(avg_wing_size = mean(LW.length),
avg_spot = mean(LAnteriorSpotM3),
avg_apex = mean(LW.apex.A))
barplot(avg_size_year$avg_wing_size,
names.arg = avg_size_year$year,
ylim = c(0,30))
barplot(avg_size_year$avg_wing_size,
names.arg = avg_size_year$year,
ylim = c(0,30),
main = "Wing Size by Year")
barplot(avg_size_year$avg_wing_size,
names.arg = avg_size_year$year,
ylim = c(0,30),
main = "Wing Size by Year",
xlab = 'year', ylab = 'wing size')
size_country <- ggplot(cleaned_df, aes(country, LW.length))
size_country + geom_boxplot()
size_country <- ggplot(cleaned_df, aes(country, wing length))
#box plot to show how location affects size
size_country <- ggplot(cleaned_df, aes(country, LW.length))
size_country + geom_boxplot() + ylab('wing length') + labs(title = 'Size by Country')
wing_length <- ggplot(cleaned_df, aes(sex, LW.length))
wing_length + geom_boxplot()
wing_length <- ggplot(cleaned_df, aes(sex, LW.length))
wing_length + geom_boxplot() + ylab('wing length') + labs(title = 'Wing Size by Sex') +
stat_summary(fun=mean, geom="point",
shape=20, color="blue",
fill="blue")
wing_length <- ggplot(cleaned_df, aes(sex, LW.length))
wing_length + geom_boxplot() + ylab('wing length') + labs(title = 'Wing Size by Sex') +
stat_summary(fun=mean, geom="point",
shape=50, color="blue",
fill="blue")
wing_length <- ggplot(cleaned_df, aes(sex, LW.length))
wing_length + geom_boxplot() + ylab('wing length') + labs(title = 'Wing Size by Sex') +
stat_summary(fun=mean, geom="point",
shape=20, color="blue",
fill="blue")
wing_length <- ggplot(cleaned_df, aes(sex, LW.length))
wing_length + geom_boxplot(alpha=0.7) + ylab('wing length') + labs(title = 'Wing Size by Sex') +
stat_summary(fun=mean, geom="point",
shape=20, color="blue",
fill="blue")
#make box plots to show distribution of wing size - t-test shows no significant difference between
# wings so only plot left wing
wing_length <- ggplot(cleaned_df, aes(sex, LW.length))
wing_length + geom_boxplot() + ylab('wing length') + labs(title = 'Wing Size by Sex')
